// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using nutriapp.infrastructure.Data;

#nullable disable

namespace nutriapp.infrastructure.Migrations
{
    [DbContext(typeof(NutriAppContext))]
    [Migration("20241228234411_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("nutriapp.core.Entities.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FoodType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__food__3214EC0783E939C4");

                    b.HasIndex("FoodType");

                    b.ToTable("Food", (string)null);
                });

            modelBuilder.Entity("nutriapp.core.Entities.FoodAtFridge", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Food")
                        .HasColumnType("int");

                    b.Property<int>("MeasureType")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("User")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__foodatfr__3214EC072CCCD628");

                    b.HasIndex("Food");

                    b.HasIndex("MeasureType");

                    b.HasIndex("User");

                    b.ToTable("FoodAtFridge", (string)null);
                });

            modelBuilder.Entity("nutriapp.core.Entities.FoodConsumed", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("CookedMeasureType")
                        .HasColumnType("int");

                    b.Property<double?>("CookedQuantity")
                        .HasColumnType("float");

                    b.Property<double?>("Cups")
                        .HasColumnType("float");

                    b.Property<int>("Food")
                        .HasColumnType("int");

                    b.Property<int>("MeasureType")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int?>("Units")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("User")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__foodatfr__3214EC072CCCD628_copy1_copy1");

                    b.HasIndex("CookedMeasureType");

                    b.HasIndex("Food");

                    b.HasIndex("MeasureType");

                    b.HasIndex("User");

                    b.ToTable("FoodConsumed", (string)null);
                });

            modelBuilder.Entity("nutriapp.core.Entities.FoodMenuMeasure", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("CookedMeasureType")
                        .HasColumnType("int");

                    b.Property<double?>("CookedQuantity")
                        .HasColumnType("float");

                    b.Property<double?>("Cups")
                        .HasColumnType("float");

                    b.Property<int>("Food")
                        .HasColumnType("int");

                    b.Property<int>("MeasureType")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int?>("Units")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("User")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__foodatfr__3214EC072CCCD628_copy1");

                    b.HasIndex("CookedMeasureType");

                    b.HasIndex("Food");

                    b.HasIndex("MeasureType");

                    b.HasIndex("User");

                    b.ToTable("FoodMenuMeasure", (string)null);
                });

            modelBuilder.Entity("nutriapp.core.Entities.FoodType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FoodTypeGroup")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__foodtype__3213E83FCBAE970F");

                    b.HasIndex("FoodTypeGroup");

                    b.ToTable("FoodType", (string)null);
                });

            modelBuilder.Entity("nutriapp.core.Entities.FoodTypeGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__foodtype__3214EC070C9807DF");

                    b.ToTable("FoodTypeGroup", (string)null);
                });

            modelBuilder.Entity("nutriapp.core.Entities.GroupUnitMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FoodTypeGroup")
                        .HasColumnType("int");

                    b.Property<int>("MealType")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__groupuni__3214EC073F309D1E");

                    b.HasIndex("FoodTypeGroup");

                    b.HasIndex("MealType");

                    b.ToTable("GroupUnitMenu", (string)null);
                });

            modelBuilder.Entity("nutriapp.core.Entities.MealType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("User")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__mealtype__3213E83F0ABA1F94");

                    b.HasIndex("User");

                    b.ToTable("MealType", (string)null);
                });

            modelBuilder.Entity("nutriapp.core.Entities.MeasureType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__measuret__3214EC07D870CDE6");

                    b.ToTable("MeasureType", (string)null);
                });

            modelBuilder.Entity("nutriapp.core.Entities.UnitMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FoodType")
                        .HasColumnType("int");

                    b.Property<int>("MaxQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__unitmenu__3214EC0726FCE74C");

                    b.HasIndex("FoodType");

                    b.ToTable("UnitMenu", (string)null);
                });

            modelBuilder.Entity("nutriapp.core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Lastname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__user__3214EC07C7E3E507");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("nutriapp.core.Entities.Food", b =>
                {
                    b.HasOne("nutriapp.core.Entities.FoodType", "FoodTypeNavigation")
                        .WithMany("Foods")
                        .HasForeignKey("FoodType")
                        .IsRequired()
                        .HasConstraintName("FK__food__FoodType__4AB81AF0");

                    b.Navigation("FoodTypeNavigation");
                });

            modelBuilder.Entity("nutriapp.core.Entities.FoodAtFridge", b =>
                {
                    b.HasOne("nutriapp.core.Entities.Food", "FoodNavigation")
                        .WithMany("FoodAtFridges")
                        .HasForeignKey("Food")
                        .IsRequired()
                        .HasConstraintName("FK__foodatfrid__Food__5535A963");

                    b.HasOne("nutriapp.core.Entities.MeasureType", "MeasureTypeNavigation")
                        .WithMany("FoodAtFridges")
                        .HasForeignKey("MeasureType")
                        .IsRequired()
                        .HasConstraintName("FK__foodatfri__Measu__534D60F1");

                    b.HasOne("nutriapp.core.Entities.User", "UserNavigation")
                        .WithMany("FoodAtFridges")
                        .HasForeignKey("User")
                        .IsRequired()
                        .HasConstraintName("FK__foodatfrid__User__5441852A");

                    b.Navigation("FoodNavigation");

                    b.Navigation("MeasureTypeNavigation");

                    b.Navigation("UserNavigation");
                });

            modelBuilder.Entity("nutriapp.core.Entities.FoodConsumed", b =>
                {
                    b.HasOne("nutriapp.core.Entities.MeasureType", "CookedMeasureTypeNavigation")
                        .WithMany("FoodConsumedCookedMeasureTypeNavigations")
                        .HasForeignKey("CookedMeasureType")
                        .HasConstraintName("FK__foodatmea__Cooke__68487DD7");

                    b.HasOne("nutriapp.core.Entities.Food", "FoodNavigation")
                        .WithMany("FoodConsumeds")
                        .HasForeignKey("Food")
                        .IsRequired()
                        .HasConstraintName("FK__foodatmeas__Food__6754599E");

                    b.HasOne("nutriapp.core.Entities.MeasureType", "MeasureTypeNavigation")
                        .WithMany("FoodConsumedMeasureTypeNavigations")
                        .HasForeignKey("MeasureType")
                        .IsRequired()
                        .HasConstraintName("FK__foodatmea__Measu__656C112C");

                    b.HasOne("nutriapp.core.Entities.User", "UserNavigation")
                        .WithMany("FoodConsumeds")
                        .HasForeignKey("User")
                        .IsRequired()
                        .HasConstraintName("FK__foodatmeas__User__66603565");

                    b.Navigation("CookedMeasureTypeNavigation");

                    b.Navigation("FoodNavigation");

                    b.Navigation("MeasureTypeNavigation");

                    b.Navigation("UserNavigation");
                });

            modelBuilder.Entity("nutriapp.core.Entities.FoodMenuMeasure", b =>
                {
                    b.HasOne("nutriapp.core.Entities.MeasureType", "CookedMeasureTypeNavigation")
                        .WithMany("FoodMenuMeasureCookedMeasureTypeNavigations")
                        .HasForeignKey("CookedMeasureType")
                        .HasConstraintName("FK__foodatmea__Cooke__5DCAEF64");

                    b.HasOne("nutriapp.core.Entities.Food", "FoodNavigation")
                        .WithMany("FoodMenuMeasures")
                        .HasForeignKey("Food")
                        .IsRequired()
                        .HasConstraintName("FK__foodatfrid__Food__59FA5E80");

                    b.HasOne("nutriapp.core.Entities.MeasureType", "MeasureTypeNavigation")
                        .WithMany("FoodMenuMeasureMeasureTypeNavigations")
                        .HasForeignKey("MeasureType")
                        .IsRequired()
                        .HasConstraintName("FK__foodatfri__Measu__5812160E");

                    b.HasOne("nutriapp.core.Entities.User", "UserNavigation")
                        .WithMany("FoodMenuMeasures")
                        .HasForeignKey("User")
                        .IsRequired()
                        .HasConstraintName("FK__foodatfrid__User__59063A47");

                    b.Navigation("CookedMeasureTypeNavigation");

                    b.Navigation("FoodNavigation");

                    b.Navigation("MeasureTypeNavigation");

                    b.Navigation("UserNavigation");
                });

            modelBuilder.Entity("nutriapp.core.Entities.FoodType", b =>
                {
                    b.HasOne("nutriapp.core.Entities.FoodTypeGroup", "FoodTypeGroupNavigation")
                        .WithMany("FoodTypes")
                        .HasForeignKey("FoodTypeGroup")
                        .IsRequired()
                        .HasConstraintName("FK__foodtype__FoodTy__4E88ABD4");

                    b.Navigation("FoodTypeGroupNavigation");
                });

            modelBuilder.Entity("nutriapp.core.Entities.GroupUnitMenu", b =>
                {
                    b.HasOne("nutriapp.core.Entities.FoodTypeGroup", "FoodTypeGroupNavigation")
                        .WithMany("GroupUnitMenus")
                        .HasForeignKey("FoodTypeGroup")
                        .IsRequired()
                        .HasConstraintName("FK__groupunit__FoodT__5629CD9C");

                    b.HasOne("nutriapp.core.Entities.MealType", "MealTypeNavigation")
                        .WithMany("GroupUnitMenus")
                        .HasForeignKey("MealType")
                        .IsRequired()
                        .HasConstraintName("FK__groupunit__MealT__5535A963");

                    b.Navigation("FoodTypeGroupNavigation");

                    b.Navigation("MealTypeNavigation");
                });

            modelBuilder.Entity("nutriapp.core.Entities.MealType", b =>
                {
                    b.HasOne("nutriapp.core.Entities.User", "UserNavigation")
                        .WithMany("MealTypes")
                        .HasForeignKey("User")
                        .IsRequired()
                        .HasConstraintName("FK__mealtype__User__4BAC3F29");

                    b.Navigation("UserNavigation");
                });

            modelBuilder.Entity("nutriapp.core.Entities.UnitMenu", b =>
                {
                    b.HasOne("nutriapp.core.Entities.FoodType", "FoodTypeNavigation")
                        .WithMany("UnitMenus")
                        .HasForeignKey("FoodType")
                        .IsRequired()
                        .HasConstraintName("FK__unitmenu__FoodTy__45F365D3");

                    b.Navigation("FoodTypeNavigation");
                });

            modelBuilder.Entity("nutriapp.core.Entities.Food", b =>
                {
                    b.Navigation("FoodAtFridges");

                    b.Navigation("FoodConsumeds");

                    b.Navigation("FoodMenuMeasures");
                });

            modelBuilder.Entity("nutriapp.core.Entities.FoodType", b =>
                {
                    b.Navigation("Foods");

                    b.Navigation("UnitMenus");
                });

            modelBuilder.Entity("nutriapp.core.Entities.FoodTypeGroup", b =>
                {
                    b.Navigation("FoodTypes");

                    b.Navigation("GroupUnitMenus");
                });

            modelBuilder.Entity("nutriapp.core.Entities.MealType", b =>
                {
                    b.Navigation("GroupUnitMenus");
                });

            modelBuilder.Entity("nutriapp.core.Entities.MeasureType", b =>
                {
                    b.Navigation("FoodAtFridges");

                    b.Navigation("FoodConsumedCookedMeasureTypeNavigations");

                    b.Navigation("FoodConsumedMeasureTypeNavigations");

                    b.Navigation("FoodMenuMeasureCookedMeasureTypeNavigations");

                    b.Navigation("FoodMenuMeasureMeasureTypeNavigations");
                });

            modelBuilder.Entity("nutriapp.core.Entities.User", b =>
                {
                    b.Navigation("FoodAtFridges");

                    b.Navigation("FoodConsumeds");

                    b.Navigation("FoodMenuMeasures");

                    b.Navigation("MealTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
